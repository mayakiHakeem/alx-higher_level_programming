Documentation for a matrix_mul module
=====================================

USAGE
==========
  ..
  ..
	Import the module
	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

  ..
  ..
	with 2 params where each is a list of lists
	>>> lazy_matrix_mul([[1, 2], [3, 4] ], [[1, 2], [3, 4]])
	array([[ 7, 10],
           [15, 22]])

  ..
  ..
	One of the params is not a list
	>>> lazy_matrix_mul([[1, 2], [3, 4] ], 5)
	Traceback (most recent call last):
		  ...
	TypeError: m_b must be a list

  ..
  ..
	One of the params is not a list
	>>> lazy_matrix_mul(4, [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
       	TypeError: m_a must be a list

 ..
 ..
	both params are not type list
	>>> lazy_matrix_mul(4, 4)
	Traceback (most recent call last):
	...
       	TypeError: m_a must be a list

 ..
 ..
	one of the params not a list of lists
	>>> matrix_mul([[1, 2], [3, 4]], [1,2])
	Traceback (most recent call last):
	...
       	TypeError: m_b must be a list of lists

 ..
 ..
	one of the params not a list of lists
	>>> lazy_matrix_mul([1, 2], [[3, 4], [4, 6]])
	Traceback (most recent call last):
	...
       	TypeError: m_a must be a list of lists


 ..
 ..
	both params are not list of lists
	>>> lazy_matrix_mul([1, 4], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
       	TypeError: m_a must be a list of lists

 ..
 ..
	one of the params an empty list
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
	Traceback (most recent call last):
	...
       	ValueError: m_b can't be empty

 ..
 ..
	one of the  params is an empty list
	>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
       	ValueError: m_a can't be empty

 ..
 ..
	both params are empty
	>>> lazy_matrix_mul([[]], [])
	Traceback (most recent call last):
	...
       	ValueError: m_a can't be empty

 ..
 ..
	both params are not type list
	>>> lazy_matrix_mul([[4, True], ['dog', 5]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
       	TypeError: m_a should contain only integers or floats

 ..
 ..
	both params are not type list
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[4, 4], ['dog', 5]])
	Traceback (most recent call last):
	...
       	TypeError: m_b should contain only integers or floats

 ..
 ..
	rows of a param not equal
	>>> lazy_matrix_mul([[4, 4, 5], [4, 5]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
       	TypeError: each row of m_a must be of the same size

 ..
 ..
	rows of a params not not equal
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[4, 4, 5], [4, 5]])
	Traceback (most recent call last):
	...
       	TypeError: each row of m_b must be of the same size

 ..
 ..
	if products of the matrices can't be achieved
	>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[3, 2, 1], [5, 6, 4]])
	Traceback (most recent call last):
	...
       	ValueError: m_a and m_b can't be multiplied

 ..
 ..
	when no param passed
	>>> lazy_matrix_mul()
	Traceback (most recent call last):
  	...
	TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

 ..
 ..
	when only one param passed
	>>> lazy_matrix_mul([[1, 2], [3, 4]])
	Traceback (most recent call last):
  	...
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

 ..
 ..
	test with float type
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6.5], [7.2, 8]])
	[[19.4, 22.5], [43.8, 51.5]]
